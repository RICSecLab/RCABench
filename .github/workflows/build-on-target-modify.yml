name: build-on-target-modify

on:
  pull_request:
    branches:
      - '*'
    paths:
      - 'targets/**.sh'

jobs:
  detect_new_targets:
    runs-on: ubuntu-20.04
    steps:
      # Note that the github.base_ref property is only available on pull_request or pull_request_target
      - name: Checkout on pull_request
        uses: actions/checkout@v3
      - name: Fetch the branch of Pull Request to be merged
        run: git fetch origin ${{ github.base_ref }} --depth=1
      - name: Detect new targets
        run: |
          echo 'DETECTED_TARGETS<<EOF' >> "$GITHUB_OUTPUT"
          git diff --name-only origin/${{ github.base_ref }} HEAD | grep -E '^targets' | sed 's/^targets\/\([^\/]\+\)\/.\+$/\1/' | sort -u >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"

  da_matrix:
    needs: detect_new_targets
    name: 'Test docker build for data augmentation'
    strategy:
      matrix:
        da_method: ['AFLcem', 'ConcFuzz']
        build_target: ${{ needs.detect_new_targets.DETECTED_TARGETS }}
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-da-${{ matrix.da_method }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-da-${{ matrix.da_method }}

      - name: Docker build
        env:
          DA: ${{ matrix.da_method }}
          TARGET_ID: ${{ matrix.build_target }}
        run: |
          # Wrap `docker build` with `docker buildx build`
          docker() {
            if [ "$1" = "build" ]; then
              args=()
              for arg in "$@"; do
                if [[ $arg != "--no-cache" ]]; then
                  args+=("$arg")
                fi
              done
              command docker buildx build --cache-from "type=local,src=/tmp/.buildx-cache" --cache-to "type=local,dest=/tmp/.buildx-cache-new,mode=max" "${args[@]:1}"
            else
              command docker "$@"
            fi
          }
          export -f docker
          ./data_augmentation/container_build.sh

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  fe_matrix:
    needs: detect_new_targets
    name: 'Test docker build for feature extraction'
    strategy:
      matrix:
        fe_method: ['AuroraFE', 'VulnLocFE']
        build_target: ${{ needs.detect_new_targets.DETECTED_TARGETS }}
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-fe-${{ matrix.fe_method }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-fe-${{ matrix.fe_method }}

      - name: Docker build
        env:
          FE: ${{ matrix.fe_method }}
          TARGET_ID: ${{ matrix.build_target }}
        run: |
          # Wrap `docker build` with `docker buildx build`
          docker() {
            if [ "$1" = "build" ]; then
              args=()
              for arg in "$@"; do
                if [[ $arg != "--no-cache" ]]; then
                  args+=("$arg")
                fi
              done
              command docker buildx build --cache-from "type=local,src=/tmp/.buildx-cache" --cache-to "type=local,dest=/tmp/.buildx-cache-new,mode=max" "${args[@]:1}"
            else
              command docker "$@"
            fi
          }
          export -f docker
          ./feature_extraction/container_build.sh

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
